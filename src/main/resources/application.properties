
info.app.name=Ecommerce Application
info.app.description=Basic Online shopping application Backend
info.app.version=1.0.0-Snapshot
server.port=3000

# notification kafka topic
notification.registered.topic=notification_registered
notification.order.placed.topic=notification_order_placed
notification.order.status.topic=notification_order_status
notification.order.cancel.topic=notification_order_cancel

# view product kafka topic
view.product.topic=view_product

kafka.bootstrap.server=localhost:9092

# For Sms Notification
twilio.sid=AC51d6d27800b56febf0ea907b22a8b5c2
twilio.access.token=3a2cd1735e2c059e88fa33b204ee4ef2
twilio.number=+12029315221

# For Email Notification
sendgrid.access.token=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
sendgrid.email.from=sagar.ab2702@gmail.com

# database Configs :
spring.datasource.url=jdbc:postgresql://localhost/ecommcustomers
spring.datasource.username=ecommerce
spring.datasource.password=ecommerce
spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#Actuators Configuration
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*


#Actuators End Point
#localhost:3000/actuator/metrics
#localhost:3000/actuator/info
#localhost:3000/actuator/health
#localhost:3000/actuator/beans
#http://localhost:3000/actuator/env

spring.sendgrid.api-key =  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

## App Properties
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 900000